// Generated by view binder compiler. Do not edit!
package dev.therapscallion.fetchinterview.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import dev.therapscallion.fetchinterview.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout header;

  @NonNull
  public final TextView listIdBtn;

  @NonNull
  public final ImageView listIdSort;

  @NonNull
  public final TextView nameBtn;

  @NonNull
  public final ImageView nameSort;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout header,
      @NonNull TextView listIdBtn, @NonNull ImageView listIdSort, @NonNull TextView nameBtn,
      @NonNull ImageView nameSort, @NonNull RecyclerView recyclerView,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.header = header;
    this.listIdBtn = listIdBtn;
    this.listIdSort = listIdSort;
    this.nameBtn = nameBtn;
    this.nameSort = nameSort;
    this.recyclerView = recyclerView;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.header;
      LinearLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.listIdBtn;
      TextView listIdBtn = ViewBindings.findChildViewById(rootView, id);
      if (listIdBtn == null) {
        break missingId;
      }

      id = R.id.listIdSort;
      ImageView listIdSort = ViewBindings.findChildViewById(rootView, id);
      if (listIdSort == null) {
        break missingId;
      }

      id = R.id.nameBtn;
      TextView nameBtn = ViewBindings.findChildViewById(rootView, id);
      if (nameBtn == null) {
        break missingId;
      }

      id = R.id.nameSort;
      ImageView nameSort = ViewBindings.findChildViewById(rootView, id);
      if (nameSort == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, header, listIdBtn, listIdSort,
          nameBtn, nameSort, recyclerView, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
